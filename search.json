[{"path":"http://iamwangsiyu.com/LDATree/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 LDATree authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://iamwangsiyu.com/LDATree/articles/LDATree.html","id":"why-use-the-ldatree-package","dir":"Articles","previous_headings":"","what":"Why use the LDATree package?","title":"Introduction to LDATree","text":"Compared similar trees, LDATree distinguishes following ways: Using Uncorrelated Linear Discriminant Analysis (ULDA) folda package, can efficiently find oblique splits. provides ULDA forward ULDA splitting rule node model. Forward ULDA intrinsic variable selection, helps mitigate influence noise variables. automatically handles missing values. can output predicted class class probability. supports downsampling, can used balance classes accelerate model fitting process. includes several visualization tools provide deeper insights data.","code":""},{"path":"http://iamwangsiyu.com/LDATree/articles/LDATree.html","id":"basic-usage-of-ldatree","dir":"Articles","previous_headings":"","what":"Basic Usage of LDATree","title":"Introduction to LDATree","text":"offer two main tree types LDATree package: LDATree FoLDTree. splitting rule node model, LDATree uses ULDA, FoLDTree uses forward ULDA. build LDATree (FoLDTree): plot LDATree (FoLDTree):    make predictions:","code":"library(LDATree) set.seed(443) diamonds <- as.data.frame(ggplot2::diamonds)[sample(53940, 2000),] datX <- diamonds[, -2] response <- diamonds[, 2] # we try to predict \"cut\" fit <- Treee(datX = datX, response = response, verbose = FALSE) # by default, it is a pre-stopping FoLDTree # fit <- Treee(datX = datX, response = response, verbose = FALSE, ldaType = \"all\", pruneMethod = \"post\") # if you want to fit a post-pruned LDATree. # View the overall tree. plot(fit) # Three types of individual plots # 1. Scatter plot on first two LD scores plot(fit, datX = datX, response = response, node = 1) # 2. Density plot on the first LD score plot(fit, datX = datX, response = response, node = 7) # 3. A message plot(fit, datX = datX, response = response, node = 2) #> [1] \"Every observation in node 2 is predicted to be Fair\" # Prediction only. predictions <- predict(fit, datX) head(predictions) #> [1] \"Ideal\" \"Ideal\" \"Ideal\" \"Ideal\" \"Ideal\" \"Ideal\" # A more informative prediction predictions <- predict(fit, datX, type = \"all\") head(predictions) #>   response node         Fair        Good Very Good     Premium     Ideal #> 1    Ideal    6 4.362048e-03 0.062196349 0.2601145 0.056664046 0.6166630 #> 2    Ideal    6 1.082022e-04 0.006308281 0.1290079 0.079961227 0.7846144 #> 3    Ideal    6 7.226446e-03 0.077434549 0.2036148 0.023888946 0.6878352 #> 4    Ideal    6 1.695119e-02 0.115233616 0.1551836 0.008302145 0.7043295 #> 5    Ideal    6 4.923729e-05 0.004157352 0.1498265 0.187391975 0.6585749 #> 6    Ideal    6 4.827312e-03 0.061274797 0.1978061 0.027410359 0.7086815"},{"path":"http://iamwangsiyu.com/LDATree/articles/LDATree.html","id":"additional-features","dir":"Articles","previous_headings":"","what":"Additional Features","title":"Introduction to LDATree","text":"Missing values: solution missing value problem inherited folda package. Check details. Downsampling: Optional downsampling occurs fitting ULDA model. Check details. misClassCost: parameter useful situations misclassifying certain classes severe impact others. Check details.","code":""},{"path":"http://iamwangsiyu.com/LDATree/articles/LDATree.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to LDATree","text":"Wang, S. (2024). new forward discriminant analysis framework based Pillai’s trace ULDA. arXiv preprint, arXiv:2409.03136. Retrieved https://arxiv.org/abs/2409.03136. Wang, S. (2024). FoLDTree: ULDA-based decision tree framework efficient oblique splits feature selection. arXiv preprint, arXiv:2410.23147. Retrieved https://arxiv.org/abs/2410.23147.","code":""},{"path":"http://iamwangsiyu.com/LDATree/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Siyu Wang. Author, maintainer, copyright holder.","code":""},{"path":"http://iamwangsiyu.com/LDATree/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang S (2024). LDATree: Oblique Classification Trees Uncorrelated Linear Discriminant Analysis Splits. R package version 0.2.0, http://iamwangsiyu.com/LDATree/, https://github.com/Moran79/LDATree.","code":"@Manual{,   title = {LDATree: Oblique Classification Trees with Uncorrelated Linear Discriminant Analysis Splits},   author = {Siyu Wang},   year = {2024},   note = {R package version 0.2.0, http://iamwangsiyu.com/LDATree/},   url = {https://github.com/Moran79/LDATree}, }"},{"path":"http://iamwangsiyu.com/LDATree/index.html","id":"ldatree-","dir":"","previous_headings":"","what":"Oblique Classification Trees with Uncorrelated Linear Discriminant Analysis Splits","title":"Oblique Classification Trees with Uncorrelated Linear Discriminant Analysis Splits","text":"LDATree R modeling package fitting classification trees oblique splits. unfamiliar classification trees, tutorial traditional CART R implementation rpart. details LDATree can found Wang, S. (2024). FoLDTree: ULDA-Based Decision Tree Framework Efficient Oblique Splits Feature Selection. arXiv preprint arXiv:2410.23147. Link.","code":""},{"path":"http://iamwangsiyu.com/LDATree/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Oblique Classification Trees with Uncorrelated Linear Discriminant Analysis Splits","text":"Compared similar trees, LDATree distinguishes following ways: Using Uncorrelated Linear Discriminant Analysis (ULDA) folda package, can efficiently find oblique splits. provides ULDA forward ULDA splitting rule node model. Forward ULDA intrinsic variable selection, helps mitigate influence noise variables. automatically handles missing values. can output predicted class class probability. supports downsampling, can used balance classes accelerate model fitting process. includes several visualization tools provide deeper insights data.","code":""},{"path":"http://iamwangsiyu.com/LDATree/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Oblique Classification Trees with Uncorrelated Linear Discriminant Analysis Splits","text":"can install development version LDATree GitHub :","code":"install.packages(\"LDATree\") # install.packages(\"devtools\") devtools::install_github('Moran79/LDATree')"},{"path":"http://iamwangsiyu.com/LDATree/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic Usage","title":"Oblique Classification Trees with Uncorrelated Linear Discriminant Analysis Splits","text":"offer two main tree types LDATree package: LDATree FoLDTree. splitting rule node model, LDATree uses ULDA, FoLDTree uses forward ULDA. build LDATree (FoLDTree): plot LDATree (FoLDTree):    make predictions: examples can found vignette.","code":"library(LDATree) set.seed(443) diamonds <- as.data.frame(ggplot2::diamonds)[sample(53940, 2000),] datX <- diamonds[, -2] response <- diamonds[, 2] # we try to predict \"cut\" fit <- Treee(datX = datX, response = response, verbose = FALSE) # by default, it is a pre-stopping FoLDTree # fit <- Treee(datX = datX, response = response, verbose = FALSE, ldaType = \"all\", pruneMethod = \"post\") # if you want to fit a post-pruned LDATree. # View the overall tree. plot(fit) # Three types of individual plots # 1. Scatter plot on first two LD scores plot(fit, datX = datX, response = response, node = 1) # 2. Density plot on the first LD score plot(fit, datX = datX, response = response, node = 7) # 3. A message plot(fit, datX = datX, response = response, node = 2) #> [1] \"Every observation in node 2 is predicted to be Fair\" # Prediction only. predictions <- predict(fit, datX) head(predictions) #> [1] \"Ideal\" \"Ideal\" \"Ideal\" \"Ideal\" \"Ideal\" \"Ideal\" # A more informative prediction predictions <- predict(fit, datX, type = \"all\") head(predictions) #>   response node         Fair        Good Very Good     Premium     Ideal #> 1    Ideal    6 4.362048e-03 0.062196349 0.2601145 0.056664046 0.6166630 #> 2    Ideal    6 1.082022e-04 0.006308281 0.1290079 0.079961227 0.7846144 #> 3    Ideal    6 7.226446e-03 0.077434549 0.2036148 0.023888946 0.6878352 #> 4    Ideal    6 1.695119e-02 0.115233616 0.1551836 0.008302145 0.7043295 #> 5    Ideal    6 4.923729e-05 0.004157352 0.1498265 0.187391975 0.6585749 #> 6    Ideal    6 4.827312e-03 0.061274797 0.1978061 0.027410359 0.7086815"},{"path":"http://iamwangsiyu.com/LDATree/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Oblique Classification Trees with Uncorrelated Linear Discriminant Analysis Splits","text":"Wang, S. (2024). FoLDTree: ULDA-based decision tree framework efficient oblique splits feature selection. arXiv preprint, arXiv:2410.23147. Retrieved https://arxiv.org/abs/2410.23147.","code":""},{"path":"http://iamwangsiyu.com/LDATree/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Oblique Classification Trees with Uncorrelated Linear Discriminant Analysis Splits","text":"encounter clear bug, please file issue minimal reproducible example GitHub","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/LDATree-package.html","id":null,"dir":"Reference","previous_headings":"","what":"LDATree: Oblique Classification Trees with Uncorrelated Linear Discriminant Analysis Splits — LDATree-package","title":"LDATree: Oblique Classification Trees with Uncorrelated Linear Discriminant Analysis Splits — LDATree-package","text":"classification tree method uses Uncorrelated Linear Discriminant Analysis (ULDA) variable selection, split determination, model fitting terminal nodes. automatically handles missing values offers visualization tools. details, see Wang (2024) doi:10.48550/arXiv.2410.23147 .","code":""},{"path":[]},{"path":"http://iamwangsiyu.com/LDATree/reference/LDATree-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"LDATree: Oblique Classification Trees with Uncorrelated Linear Discriminant Analysis Splits — LDATree-package","text":"Maintainer: Siyu Wang iamwangsiyu@gmail.com (ORCID) [copyright holder]","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/Treee.html","id":null,"dir":"Reference","previous_headings":"","what":"Classification Trees with Uncorrelated Linear Discriminant Analysis Terminal Nodes — Treee","title":"Classification Trees with Uncorrelated Linear Discriminant Analysis Terminal Nodes — Treee","text":"function fits classification tree node Uncorrelated Linear Discriminant Analysis (ULDA) model. can also handle missing values perform downsampling. resulting tree can pruned either pre-pruning post-pruning methods.","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/Treee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classification Trees with Uncorrelated Linear Discriminant Analysis Terminal Nodes — Treee","text":"","code":"Treee(   datX,   response,   ldaType = c(\"forward\", \"all\"),   nodeModel = c(\"ULDA\", \"mode\"),   pruneMethod = c(\"pre\", \"post\"),   numberOfPruning = 10L,   maxTreeLevel = 20L,   minNodeSize = NULL,   pThreshold = NULL,   prior = NULL,   misClassCost = NULL,   missingMethod = c(\"medianFlag\", \"newLevel\"),   kSample = -1,   verbose = TRUE )"},{"path":"http://iamwangsiyu.com/LDATree/reference/Treee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classification Trees with Uncorrelated Linear Discriminant Analysis Terminal Nodes — Treee","text":"datX data frame predictor variables. response vector response values corresponding datX. ldaType character string specifying type LDA use. Options \"forward\" forward ULDA \"\" full ULDA. Default \"forward\". nodeModel character string specifying type model used node. Options \"ULDA\" Uncorrelated LDA, \"mode\" predicting based frequent class. Default \"ULDA\". pruneMethod character string specifying pruning method. \"pre\" performs pre-pruning based p-value thresholds, \"post\" performs cross-validation-based post-pruning. Default \"pre\". numberOfPruning integer specifying number folds cross-validation post-pruning. Default 10. maxTreeLevel integer controlling maximum depth tree. Increasing value allows deeper trees nodes. Default 20. minNodeSize integer controlling minimum number samples required node. Setting higher value may lead earlier stopping smaller trees. specified, defaults one plus number response classes. pThreshold numeric value used threshold pre-pruning based p-values. Lower values result conservative trees. specified, defaults 0.01 pre-pruning 0.6 post-pruning. prior numeric vector prior probabilities class. NULL, prior automatically calculated data. misClassCost square matrix \\(C\\), element \\(C_{ij}\\) represents cost classifying observation class \\(\\) given truly belongs class \\(j\\). NULL, default matrix equal misclassification costs class pairs used. Default NULL. missingMethod character string specifying missing values handled. Options include 'mean', 'median', 'meanFlag', 'medianFlag' numerical variables, 'mode', 'modeFlag', 'newLevel' factor variables. 'Flag' options indicate whether missing flag added, 'newLevel' replaces missing values new factor level. kSample integer specifying number samples use downsampling tree construction. Set -1 disable downsampling. verbose logical value. TRUE, progress messages detailed output printed tree construction pruning. Default FALSE.","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/Treee.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classification Trees with Uncorrelated Linear Discriminant Analysis Terminal Nodes — Treee","text":"object class Treee containing fitted tree, list nodes, object class TreeeNode. TreeeNode contains: currentIndex: node index tree. currentLevel: depth current node tree. idxRow, idxCol: Row column indices indicating part original data used node. currentLoss: training error node. accuracy: training accuracy node. stopInfo: Information node stopped growing. proportions: observed frequency class node. prior: (adjusted) class prior probabilities used ULDA mode prediction. misClassCost: misclassification cost matrix used node. parent: index parent node. children: vector indices node’s direct children. splitFun: splitting function used node. nodeModel: Indicates model fitted node ('ULDA' 'mode'). nodePredict: fitted model node, either ULDA object plurality class. alpha: p-value two-sample t-test used evaluate strength split. childrenTerminal: vector indices representing terminal nodes descendants node. childrenTerminalLoss: total training error accumulated nodes listed childrenTerminal.","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/Treee.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Classification Trees with Uncorrelated Linear Discriminant Analysis Terminal Nodes — Treee","text":"Wang, S. (2024). FoLDTree: ULDA-Based Decision Tree Framework Efficient Oblique Splits Feature Selection. arXiv preprint arXiv:2410.23147. Available https://arxiv.org/abs/2410.23147. Wang, S. (2024). New Forward Discriminant Analysis Framework Based Pillai's Trace ULDA. arXiv preprint arXiv:2409.03136. Available https://arxiv.org/abs/2409.03136.","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/Treee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classification Trees with Uncorrelated Linear Discriminant Analysis Terminal Nodes — Treee","text":"","code":"fit <- Treee(datX = iris[, -5], response = iris[, 5], verbose = FALSE) # Use cross-validation to prune the tree fitCV <- Treee(datX = iris[, -5], response = iris[, 5], pruneMethod = \"post\", verbose = FALSE) head(predict(fit, iris)) # prediction #> [1] \"setosa\" \"setosa\" \"setosa\" \"setosa\" \"setosa\" \"setosa\" plot(fit) # plot the overall tree  {\"x\":{\"nodes\":{\"id\":[1],\"title\":[\"#### Information Panel: Node 1 #### <\\/br>There are 150 data in this node <\\/br>The resubstitution acc is  0.98 <\\/br>Plurality class (33.33%) is setosa <\\/br>The model in this node is  ULDA <\\/br>stopInfo: Split is not significant <\\/br>Pillai's trace is  1.19 <\\/br>MANOVA p value is  1.926e-54 <\\/br>Gini Index is  6.666e-01 <\\/br>Splitting p value is  5e-01\"],\"value\":[5.010635294096256],\"level\":[0],\"group\":[\"setosa\"],\"label\":[\"147 / 150\\nNode 1\"],\"shadow\":[true]},\"edges\":null,\"nodesToDataframe\":true,\"edgesToDataframe\":false,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"layout\":{\"hierarchical\":{\"enabled\":true,\"levelSeparation\":100}},\"interaction\":{\"dragNodes\":false,\"dragView\":true,\"zoomView\":true,\"zoomSpeed\":1},\"groups\":{\"setosa\":{\"color\":\"#4B0055\"},\"versicolor\":{\"color\":\"#009B95\"},\"useDefaultGroups\":true,\"virginica\":{\"color\":\"#FDE333\"}}},\"groups\":[\"setosa\"],\"width\":\"100%\",\"height\":\"600px\",\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\",\"legend\":{\"width\":0.1,\"useGroups\":false,\"position\":\"right\",\"ncol\":1,\"stepX\":100,\"stepY\":100,\"zoom\":true,\"nodes\":[{\"label\":\"setosa\",\"shape\":\"dot\",\"color\":\"#4B0055\"},{\"label\":\"versicolor\",\"shape\":\"dot\",\"color\":\"#009B95\"},{\"label\":\"virginica\",\"shape\":\"dot\",\"color\":\"#FDE333\"}],\"nodesToDataframe\":false,\"main\":{\"text\":\"Class\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:14px;text-align:center;\"}}},\"evals\":[],\"jsHooks\":[]}plot(fit, datX = iris[, -5], response = iris[, 5], node = 1) # plot a certain node"},{"path":"http://iamwangsiyu.com/LDATree/reference/plot.Treee.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Treee Object — plot.Treee","title":"Plot a Treee Object — plot.Treee","text":"function visualizes either entire decision tree specific node within tree. tree displayed interactive network nodes edges, individual nodes scatter/density plots using ggplot2.","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/plot.Treee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Treee Object — plot.Treee","text":"","code":"# S3 method for class 'Treee' plot(x, datX, response, node = -1, ...)"},{"path":"http://iamwangsiyu.com/LDATree/reference/plot.Treee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Treee Object — plot.Treee","text":"x fitted model object class Treee, typically result Treee() function. datX data frame predictor variables. Required plotting individual nodes. response vector response values. Required plotting individual nodes. node integer specifying node plot. node = -1, entire tree plotted. Default -1. ... Additional arguments passed plotting functions.","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/plot.Treee.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a Treee Object — plot.Treee","text":"visNetwork interactive plot decision tree node = -1, ggplot2 object specific node plotted.","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/plot.Treee.html","id":"overall-tree-structure","dir":"Reference","previous_headings":"","what":"Overall Tree Structure","title":"Plot a Treee Object — plot.Treee","text":"full tree diagram displayed using visNetwork node specified (default -1). color represents common (plurality) class within node, size terminal node reflects relative sample size. node, fraction correctly predicted training samples total sample size node shown, along node index. Clicking node opens information panel additional details.","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/plot.Treee.html","id":"individual-node-plot","dir":"Reference","previous_headings":"","what":"Individual Node Plot","title":"Plot a Treee Object — plot.Treee","text":"plot specific node, must provide node index along original training predictors (datX) responses (response). scatter plot generated one discriminant score available, otherwise, density plot created. Samples projected onto linear discriminant score(s).","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/plot.Treee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Treee Object — plot.Treee","text":"","code":"fit <- Treee(datX = iris[, -5], response = iris[, 5], verbose = FALSE) plot(fit) # plot the overall tree  {\"x\":{\"nodes\":{\"id\":[1],\"title\":[\"#### Information Panel: Node 1 #### <\\/br>There are 150 data in this node <\\/br>The resubstitution acc is  0.98 <\\/br>Plurality class (33.33%) is setosa <\\/br>The model in this node is  ULDA <\\/br>stopInfo: Split is not significant <\\/br>Pillai's trace is  1.19 <\\/br>MANOVA p value is  1.926e-54 <\\/br>Gini Index is  6.666e-01 <\\/br>Splitting p value is  5e-01\"],\"value\":[5.010635294096256],\"level\":[0],\"group\":[\"setosa\"],\"label\":[\"147 / 150\\nNode 1\"],\"shadow\":[true]},\"edges\":null,\"nodesToDataframe\":true,\"edgesToDataframe\":false,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\"},\"manipulation\":{\"enabled\":false},\"layout\":{\"hierarchical\":{\"enabled\":true,\"levelSeparation\":100}},\"interaction\":{\"dragNodes\":false,\"dragView\":true,\"zoomView\":true,\"zoomSpeed\":1},\"groups\":{\"setosa\":{\"color\":\"#4B0055\"},\"versicolor\":{\"color\":\"#009B95\"},\"useDefaultGroups\":true,\"virginica\":{\"color\":\"#FDE333\"}}},\"groups\":[\"setosa\"],\"width\":\"100%\",\"height\":\"600px\",\"idselection\":{\"enabled\":false},\"byselection\":{\"enabled\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\",\"legend\":{\"width\":0.1,\"useGroups\":false,\"position\":\"right\",\"ncol\":1,\"stepX\":100,\"stepY\":100,\"zoom\":true,\"nodes\":[{\"label\":\"setosa\",\"shape\":\"dot\",\"color\":\"#4B0055\"},{\"label\":\"versicolor\",\"shape\":\"dot\",\"color\":\"#009B95\"},{\"label\":\"virginica\",\"shape\":\"dot\",\"color\":\"#FDE333\"}],\"nodesToDataframe\":false,\"main\":{\"text\":\"Class\",\"style\":\"font-family:Georgia, Times New Roman, Times, serif;font-weight:bold;font-size:14px;text-align:center;\"}}},\"evals\":[],\"jsHooks\":[]}plot(fit, datX = iris, response = iris[, 5], node = 1) # plot a specific node"},{"path":"http://iamwangsiyu.com/LDATree/reference/predict.Treee.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictions From a Fitted Treee Object — predict.Treee","title":"Predictions From a Fitted Treee Object — predict.Treee","text":"Generate predictions new data using fitted Treee model.","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/predict.Treee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictions From a Fitted Treee Object — predict.Treee","text":"","code":"# S3 method for class 'Treee' predict(object, newdata, type = c(\"response\", \"prob\", \"all\"), ...)"},{"path":"http://iamwangsiyu.com/LDATree/reference/predict.Treee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictions From a Fitted Treee Object — predict.Treee","text":"object fitted model object class Treee, typically result Treee() function. newdata data frame containing predictor variables. Missing values allowed handled according fitted tree's method handling missing data. type character string specifying type prediction return. Options : 'response': returns predicted class observation (default). 'prob': returns data frame posterior probabilities class. '': returns data frame containing predicted classes, posterior probabilities, predicted node indices. ... Additional arguments passed methods.","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/predict.Treee.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictions From a Fitted Treee Object — predict.Treee","text":"Depending value type, function returns: type = 'response': character vector predicted class labels. type = 'prob': data frame posterior probabilities, class column. type = '': data frame containing predicted class labels, posterior probabilities, predicted node indices. Note: factor predictors, level present training data found newdata, treated missing handled according missingMethod specified fitted tree.","code":""},{"path":"http://iamwangsiyu.com/LDATree/reference/predict.Treee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predictions From a Fitted Treee Object — predict.Treee","text":"","code":"fit <- Treee(datX = iris[, -5], response = iris[, 5], verbose = FALSE) head(predict(fit, iris)) # Predicted classes #> [1] \"setosa\" \"setosa\" \"setosa\" \"setosa\" \"setosa\" \"setosa\" head(predict(fit, iris[, -5], type = \"prob\")) # Posterior probabilities #>   setosa   versicolor    virginica #> 1      1 1.425464e-20 2.261436e-39 #> 2      1 3.835613e-16 7.404471e-34 #> 3      1 1.428019e-18 6.243052e-37 #> 4      1 2.264688e-16 4.310477e-34 #> 5      1 1.853449e-21 1.783867e-40 #> 6      1 7.337925e-20 1.553330e-37 head(predict(fit, iris[, -5], type = \"all\")) # Full details #>   response node setosa   versicolor    virginica #> 1   setosa    1      1 1.425464e-20 2.261436e-39 #> 2   setosa    1      1 3.835613e-16 7.404471e-34 #> 3   setosa    1      1 1.428019e-18 6.243052e-37 #> 4   setosa    1      1 2.264688e-16 4.310477e-34 #> 5   setosa    1      1 1.853449e-21 1.783867e-40 #> 6   setosa    1      1 7.337925e-20 1.553330e-37"},{"path":"http://iamwangsiyu.com/LDATree/news/index.html","id":"ldatree-020","dir":"Changelog","previous_headings":"","what":"LDATree 0.2.0","title":"LDATree 0.2.0","text":"CRAN release: 2024-10-31 Change splitting rule multi-way split based LDA. Integrate ULDA forward ULDA folda package. Move utils function folda package. Updates pruning process: progress bar, new test statistics, … Support downsampling.","code":""},{"path":"http://iamwangsiyu.com/LDATree/news/index.html","id":"ldatree-012","dir":"Changelog","previous_headings":"","what":"LDATree 0.1.2","title":"LDATree 0.1.2","text":"CRAN release: 2023-08-25 Fixed one HTML plot vignette due CRAN check error flavor r-release-macos-x86_64.","code":""},{"path":"http://iamwangsiyu.com/LDATree/news/index.html","id":"ldatree-011","dir":"Changelog","previous_headings":"","what":"LDATree 0.1.1","title":"LDATree 0.1.1","text":"CRAN release: 2023-08-24 Fixed two examples functions due MKL error Additional issues. detects --bounds error one plots example.","code":""},{"path":"http://iamwangsiyu.com/LDATree/news/index.html","id":"ldatree-010","dir":"Changelog","previous_headings":"","what":"LDATree 0.1.0","title":"LDATree 0.1.0","text":"CRAN release: 2023-08-22 Initial CRAN submission.","code":""}]
